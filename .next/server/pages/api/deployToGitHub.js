"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/deployToGitHub";
exports.ids = ["pages/api/deployToGitHub"];
exports.modules = {

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2FdeployToGitHub&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5CdeployToGitHub.js&middlewareConfigBase64=e30%3D!":
/*!**********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2FdeployToGitHub&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5CdeployToGitHub.js&middlewareConfigBase64=e30%3D! ***!
  \**********************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   handler: () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/api-utils */ \"(api-node)/./node_modules/next/dist/server/api-utils/index.js\");\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_deployToGitHub_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages\\api\\deployToGitHub.js */ \"(api-node)/./pages/api/deployToGitHub.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(api-node)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(api-node)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n// Import the userland code.\n\n\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_deployToGitHub_js__WEBPACK_IMPORTED_MODULE_4__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_deployToGitHub_js__WEBPACK_IMPORTED_MODULE_4__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/deployToGitHub\",\n        pathname: \"/api/deployToGitHub\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_deployToGitHub_js__WEBPACK_IMPORTED_MODULE_4__,\n    distDir: \".next\" || 0,\n    projectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    let srcPage = \"/api/deployToGitHub\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {}\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.getTracer)();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: undefined,\n                multiZoneDraftMode: Boolean(\"false\"),\n                trustHostHeader: undefined,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/deployToGitHub\",\n                projectDir:  false || '',\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        (0,next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__.sendError)(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2FdeployToGitHub&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5CdeployToGitHub.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/auth/[...nextauth].js":
/*!*****************************************!*\
  !*** ./pages/api/auth/[...nextauth].js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authOptions: () => (/* binding */ authOptions),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth */ \"next-auth\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_auth_providers_github__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/github */ \"next-auth/providers/github\");\n/* harmony import */ var next_auth_providers_github__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth_providers_github__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst authOptions = {\n    providers: [\n        next_auth_providers_github__WEBPACK_IMPORTED_MODULE_1___default()({\n            clientId: process.env.GITHUB_CLIENT_ID,\n            clientSecret: process.env.GITHUB_CLIENT_SECRET,\n            authorization: {\n                params: {\n                    scope: \"repo user\"\n                }\n            }\n        })\n    ],\n    secret: process.env.NEXTAUTH_SECRET,\n    callbacks: {\n        async jwt ({ token, account }) {\n            if (account) {\n                token.accessToken = account.access_token; // save token\n            }\n            return token;\n        },\n        async session ({ session, token }) {\n            session.accessToken = token.accessToken; // expose token in session\n            return session;\n        }\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (next_auth__WEBPACK_IMPORTED_MODULE_0___default()(authOptions));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3BhZ2VzL2FwaS9hdXRoL1suLi5uZXh0YXV0aF0uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWlDO0FBQ3VCO0FBRWpELE1BQU1FLGNBQWM7SUFDekJDLFdBQVc7UUFDVEYsaUVBQWNBLENBQUM7WUFDYkcsVUFBVUMsUUFBUUMsR0FBRyxDQUFDQyxnQkFBZ0I7WUFDdENDLGNBQWNILFFBQVFDLEdBQUcsQ0FBQ0csb0JBQW9CO1lBQzlDQyxlQUFlO2dCQUFFQyxRQUFRO29CQUFFQyxPQUFPO2dCQUFZO1lBQUU7UUFDbEQ7S0FDRDtJQUNEQyxRQUFRUixRQUFRQyxHQUFHLENBQUNRLGVBQWU7SUFDbkNDLFdBQVc7UUFDVCxNQUFNQyxLQUFJLEVBQUVDLEtBQUssRUFBRUMsT0FBTyxFQUFFO1lBQzFCLElBQUlBLFNBQVM7Z0JBQ1hELE1BQU1FLFdBQVcsR0FBR0QsUUFBUUUsWUFBWSxFQUFFLGFBQWE7WUFDekQ7WUFDQSxPQUFPSDtRQUNUO1FBQ0EsTUFBTUksU0FBUSxFQUFFQSxPQUFPLEVBQUVKLEtBQUssRUFBRTtZQUM5QkksUUFBUUYsV0FBVyxHQUFHRixNQUFNRSxXQUFXLEVBQUUsMEJBQTBCO1lBQ25FLE9BQU9FO1FBQ1Q7SUFDRjtBQUNGLEVBQUU7QUFFRixpRUFBZXJCLGdEQUFRQSxDQUFDRSxZQUFZQSxFQUFDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGRhbmlyXFxEb3dubG9hZHNcXHBvcnRmb2xpb0dlblxccGFnZXNcXGFwaVxcYXV0aFxcWy4uLm5leHRhdXRoXS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTmV4dEF1dGggZnJvbSBcIm5leHQtYXV0aFwiO1xyXG5pbXBvcnQgR2l0SHViUHJvdmlkZXIgZnJvbSBcIm5leHQtYXV0aC9wcm92aWRlcnMvZ2l0aHViXCI7XHJcblxyXG5leHBvcnQgY29uc3QgYXV0aE9wdGlvbnMgPSB7XHJcbiAgcHJvdmlkZXJzOiBbXHJcbiAgICBHaXRIdWJQcm92aWRlcih7XHJcbiAgICAgIGNsaWVudElkOiBwcm9jZXNzLmVudi5HSVRIVUJfQ0xJRU5UX0lELFxyXG4gICAgICBjbGllbnRTZWNyZXQ6IHByb2Nlc3MuZW52LkdJVEhVQl9DTElFTlRfU0VDUkVULFxyXG4gICAgICBhdXRob3JpemF0aW9uOiB7IHBhcmFtczogeyBzY29wZTogXCJyZXBvIHVzZXJcIiB9IH0sXHJcbiAgICB9KSxcclxuICBdLFxyXG4gIHNlY3JldDogcHJvY2Vzcy5lbnYuTkVYVEFVVEhfU0VDUkVULFxyXG4gIGNhbGxiYWNrczoge1xyXG4gICAgYXN5bmMgand0KHsgdG9rZW4sIGFjY291bnQgfSkge1xyXG4gICAgICBpZiAoYWNjb3VudCkge1xyXG4gICAgICAgIHRva2VuLmFjY2Vzc1Rva2VuID0gYWNjb3VudC5hY2Nlc3NfdG9rZW47IC8vIHNhdmUgdG9rZW5cclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gdG9rZW47XHJcbiAgICB9LFxyXG4gICAgYXN5bmMgc2Vzc2lvbih7IHNlc3Npb24sIHRva2VuIH0pIHtcclxuICAgICAgc2Vzc2lvbi5hY2Nlc3NUb2tlbiA9IHRva2VuLmFjY2Vzc1Rva2VuOyAvLyBleHBvc2UgdG9rZW4gaW4gc2Vzc2lvblxyXG4gICAgICByZXR1cm4gc2Vzc2lvbjtcclxuICAgIH0sXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IE5leHRBdXRoKGF1dGhPcHRpb25zKTsiXSwibmFtZXMiOlsiTmV4dEF1dGgiLCJHaXRIdWJQcm92aWRlciIsImF1dGhPcHRpb25zIiwicHJvdmlkZXJzIiwiY2xpZW50SWQiLCJwcm9jZXNzIiwiZW52IiwiR0lUSFVCX0NMSUVOVF9JRCIsImNsaWVudFNlY3JldCIsIkdJVEhVQl9DTElFTlRfU0VDUkVUIiwiYXV0aG9yaXphdGlvbiIsInBhcmFtcyIsInNjb3BlIiwic2VjcmV0IiwiTkVYVEFVVEhfU0VDUkVUIiwiY2FsbGJhY2tzIiwiand0IiwidG9rZW4iLCJhY2NvdW50IiwiYWNjZXNzVG9rZW4iLCJhY2Nlc3NfdG9rZW4iLCJzZXNzaW9uIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/auth/[...nextauth].js\n");

/***/ }),

/***/ "(api-node)/./pages/api/deployToGitHub.js":
/*!*************************************!*\
  !*** ./pages/api/deployToGitHub.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_auth_next__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/next */ \"next-auth/next\");\n/* harmony import */ var next_auth_next__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth_next__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _auth_nextauth___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./auth/[...nextauth] */ \"(api-node)/./pages/api/auth/[...nextauth].js\");\n\n\nasync function handler(req, res) {\n    if (req.method !== \"POST\") return res.status(405).end();\n    const session = await (0,next_auth_next__WEBPACK_IMPORTED_MODULE_0__.getServerSession)(req, res, _auth_nextauth___WEBPACK_IMPORTED_MODULE_1__.authOptions);\n    if (!session || !session.accessToken) {\n        return res.status(401).json({\n            error: \"Not authenticated\"\n        });\n    }\n    const accessToken = session.accessToken;\n    const { html } = req.body;\n    try {\n        // 1. Get GitHub user info\n        const userRes = await fetch(\"https://api.github.com/user\", {\n            headers: {\n                Authorization: `token ${accessToken}`\n            }\n        });\n        const user = await userRes.json();\n        // 2. Create repo\n        const repoRes = await fetch(\"https://api.github.com/user/repos\", {\n            method: \"POST\",\n            headers: {\n                Authorization: `token ${accessToken}`,\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                name: \"portfolioSite\",\n                auto_init: true,\n                private: false\n            })\n        });\n        if (!repoRes.ok) {\n            const error = await repoRes.json();\n            throw new Error(error.message || \"Repo creation failed\");\n        }\n        // 3. Upload index.html\n        await fetch(`https://api.github.com/repos/${user.login}/portfolioSite/contents/index.html`, {\n            method: \"PUT\",\n            headers: {\n                Authorization: `token ${accessToken}`,\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                message: \"Add generated portfolio\",\n                content: Buffer.from(html).toString(\"base64\")\n            })\n        });\n        // 4. Enable GitHub Pages\n        await fetch(`https://api.github.com/repos/${user.login}/portfolioSite/pages`, {\n            method: \"POST\",\n            headers: {\n                Authorization: `token ${accessToken}`,\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                source: {\n                    branch: \"main\",\n                    path: \"/\"\n                }\n            })\n        });\n        const url = `https://${user.login}.github.io/portfolioSite`;\n        res.status(200).json({\n            url\n        });\n    } catch (err) {\n        res.status(500).json({\n            error: err.message\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3BhZ2VzL2FwaS9kZXBsb3lUb0dpdEh1Yi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWtEO0FBQ0M7QUFFcEMsZUFBZUUsUUFBUUMsR0FBRyxFQUFFQyxHQUFHO0lBQzVDLElBQUlELElBQUlFLE1BQU0sS0FBSyxRQUFRLE9BQU9ELElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxHQUFHO0lBRXJELE1BQU1DLFVBQVUsTUFBTVIsZ0VBQWdCQSxDQUFDRyxLQUFLQyxLQUFLSCx3REFBV0E7SUFFNUQsSUFBSSxDQUFDTyxXQUFXLENBQUNBLFFBQVFDLFdBQVcsRUFBRTtRQUNwQyxPQUFPTCxJQUFJRSxNQUFNLENBQUMsS0FBS0ksSUFBSSxDQUFDO1lBQUVDLE9BQU87UUFBb0I7SUFDM0Q7SUFFQSxNQUFNRixjQUFjRCxRQUFRQyxXQUFXO0lBQ3ZDLE1BQU0sRUFBRUcsSUFBSSxFQUFFLEdBQUdULElBQUlVLElBQUk7SUFFekIsSUFBSTtRQUNGLDBCQUEwQjtRQUMxQixNQUFNQyxVQUFVLE1BQU1DLE1BQU0sK0JBQStCO1lBQ3pEQyxTQUFTO2dCQUFFQyxlQUFlLENBQUMsTUFBTSxFQUFFUixhQUFhO1lBQUM7UUFDbkQ7UUFDQSxNQUFNUyxPQUFPLE1BQU1KLFFBQVFKLElBQUk7UUFFL0IsaUJBQWlCO1FBQ2pCLE1BQU1TLFVBQVUsTUFBTUosTUFBTSxxQ0FBcUM7WUFDL0RWLFFBQVE7WUFDUlcsU0FBUztnQkFDUEMsZUFBZSxDQUFDLE1BQU0sRUFBRVIsYUFBYTtnQkFDckMsZ0JBQWdCO1lBQ2xCO1lBQ0FJLE1BQU1PLEtBQUtDLFNBQVMsQ0FBQztnQkFDbkJDLE1BQU07Z0JBQ05DLFdBQVc7Z0JBQ1hDLFNBQVM7WUFDWDtRQUNGO1FBRUEsSUFBSSxDQUFDTCxRQUFRTSxFQUFFLEVBQUU7WUFDZixNQUFNZCxRQUFRLE1BQU1RLFFBQVFULElBQUk7WUFDaEMsTUFBTSxJQUFJZ0IsTUFBTWYsTUFBTWdCLE9BQU8sSUFBSTtRQUNuQztRQUVBLHVCQUF1QjtRQUN2QixNQUFNWixNQUNKLENBQUMsNkJBQTZCLEVBQUVHLEtBQUtVLEtBQUssQ0FBQyxrQ0FBa0MsQ0FBQyxFQUM5RTtZQUNFdkIsUUFBUTtZQUNSVyxTQUFTO2dCQUNQQyxlQUFlLENBQUMsTUFBTSxFQUFFUixhQUFhO2dCQUNyQyxnQkFBZ0I7WUFDbEI7WUFDQUksTUFBTU8sS0FBS0MsU0FBUyxDQUFDO2dCQUNuQk0sU0FBUztnQkFDVEUsU0FBU0MsT0FBT0MsSUFBSSxDQUFDbkIsTUFBTW9CLFFBQVEsQ0FBQztZQUN0QztRQUNGO1FBR0YseUJBQXlCO1FBQ3pCLE1BQU1qQixNQUNKLENBQUMsNkJBQTZCLEVBQUVHLEtBQUtVLEtBQUssQ0FBQyxvQkFBb0IsQ0FBQyxFQUNoRTtZQUNFdkIsUUFBUTtZQUNSVyxTQUFTO2dCQUNQQyxlQUFlLENBQUMsTUFBTSxFQUFFUixhQUFhO2dCQUNyQyxnQkFBZ0I7WUFDbEI7WUFDQUksTUFBTU8sS0FBS0MsU0FBUyxDQUFDO2dCQUNuQlksUUFBUTtvQkFBRUMsUUFBUTtvQkFBUUMsTUFBTTtnQkFBSTtZQUN0QztRQUNGO1FBR0YsTUFBTUMsTUFBTSxDQUFDLFFBQVEsRUFBRWxCLEtBQUtVLEtBQUssQ0FBQyx3QkFBd0IsQ0FBQztRQUMzRHhCLElBQUlFLE1BQU0sQ0FBQyxLQUFLSSxJQUFJLENBQUM7WUFBRTBCO1FBQUk7SUFDN0IsRUFBRSxPQUFPQyxLQUFLO1FBQ1pqQyxJQUFJRSxNQUFNLENBQUMsS0FBS0ksSUFBSSxDQUFDO1lBQUVDLE9BQU8wQixJQUFJVixPQUFPO1FBQUM7SUFDNUM7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxkYW5pclxcRG93bmxvYWRzXFxwb3J0Zm9saW9HZW5cXHBhZ2VzXFxhcGlcXGRlcGxveVRvR2l0SHViLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldFNlcnZlclNlc3Npb24gfSBmcm9tIFwibmV4dC1hdXRoL25leHRcIjtcclxuaW1wb3J0IHsgYXV0aE9wdGlvbnMgfSBmcm9tIFwiLi9hdXRoL1suLi5uZXh0YXV0aF1cIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIocmVxLCByZXMpIHtcclxuICBpZiAocmVxLm1ldGhvZCAhPT0gXCJQT1NUXCIpIHJldHVybiByZXMuc3RhdHVzKDQwNSkuZW5kKCk7XHJcblxyXG4gIGNvbnN0IHNlc3Npb24gPSBhd2FpdCBnZXRTZXJ2ZXJTZXNzaW9uKHJlcSwgcmVzLCBhdXRoT3B0aW9ucyk7XHJcblxyXG4gIGlmICghc2Vzc2lvbiB8fCAhc2Vzc2lvbi5hY2Nlc3NUb2tlbikge1xyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHsgZXJyb3I6IFwiTm90IGF1dGhlbnRpY2F0ZWRcIiB9KTtcclxuICB9XHJcblxyXG4gIGNvbnN0IGFjY2Vzc1Rva2VuID0gc2Vzc2lvbi5hY2Nlc3NUb2tlbjtcclxuICBjb25zdCB7IGh0bWwgfSA9IHJlcS5ib2R5O1xyXG5cclxuICB0cnkge1xyXG4gICAgLy8gMS4gR2V0IEdpdEh1YiB1c2VyIGluZm9cclxuICAgIGNvbnN0IHVzZXJSZXMgPSBhd2FpdCBmZXRjaChcImh0dHBzOi8vYXBpLmdpdGh1Yi5jb20vdXNlclwiLCB7XHJcbiAgICAgIGhlYWRlcnM6IHsgQXV0aG9yaXphdGlvbjogYHRva2VuICR7YWNjZXNzVG9rZW59YCB9LFxyXG4gICAgfSk7XHJcbiAgICBjb25zdCB1c2VyID0gYXdhaXQgdXNlclJlcy5qc29uKCk7XHJcblxyXG4gICAgLy8gMi4gQ3JlYXRlIHJlcG9cclxuICAgIGNvbnN0IHJlcG9SZXMgPSBhd2FpdCBmZXRjaChcImh0dHBzOi8vYXBpLmdpdGh1Yi5jb20vdXNlci9yZXBvc1wiLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICBBdXRob3JpemF0aW9uOiBgdG9rZW4gJHthY2Nlc3NUb2tlbn1gLFxyXG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICB9LFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgbmFtZTogXCJwb3J0Zm9saW9TaXRlXCIsXHJcbiAgICAgICAgYXV0b19pbml0OiB0cnVlLFxyXG4gICAgICAgIHByaXZhdGU6IGZhbHNlLFxyXG4gICAgICB9KSxcclxuICAgIH0pO1xyXG5cclxuICAgIGlmICghcmVwb1Jlcy5vaykge1xyXG4gICAgICBjb25zdCBlcnJvciA9IGF3YWl0IHJlcG9SZXMuanNvbigpO1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3IubWVzc2FnZSB8fCBcIlJlcG8gY3JlYXRpb24gZmFpbGVkXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIDMuIFVwbG9hZCBpbmRleC5odG1sXHJcbiAgICBhd2FpdCBmZXRjaChcclxuICAgICAgYGh0dHBzOi8vYXBpLmdpdGh1Yi5jb20vcmVwb3MvJHt1c2VyLmxvZ2lufS9wb3J0Zm9saW9TaXRlL2NvbnRlbnRzL2luZGV4Lmh0bWxgLFxyXG4gICAgICB7XHJcbiAgICAgICAgbWV0aG9kOiBcIlBVVFwiLFxyXG4gICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgIEF1dGhvcml6YXRpb246IGB0b2tlbiAke2FjY2Vzc1Rva2VufWAsXHJcbiAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgICAgICB9LFxyXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICAgIG1lc3NhZ2U6IFwiQWRkIGdlbmVyYXRlZCBwb3J0Zm9saW9cIixcclxuICAgICAgICAgIGNvbnRlbnQ6IEJ1ZmZlci5mcm9tKGh0bWwpLnRvU3RyaW5nKFwiYmFzZTY0XCIpLFxyXG4gICAgICAgIH0pLFxyXG4gICAgICB9XHJcbiAgICApO1xyXG5cclxuICAgIC8vIDQuIEVuYWJsZSBHaXRIdWIgUGFnZXNcclxuICAgIGF3YWl0IGZldGNoKFxyXG4gICAgICBgaHR0cHM6Ly9hcGkuZ2l0aHViLmNvbS9yZXBvcy8ke3VzZXIubG9naW59L3BvcnRmb2xpb1NpdGUvcGFnZXNgLFxyXG4gICAgICB7XHJcbiAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICBBdXRob3JpemF0aW9uOiBgdG9rZW4gJHthY2Nlc3NUb2tlbn1gLFxyXG4gICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgICBzb3VyY2U6IHsgYnJhbmNoOiBcIm1haW5cIiwgcGF0aDogXCIvXCIgfSxcclxuICAgICAgICB9KSxcclxuICAgICAgfVxyXG4gICAgKTtcclxuXHJcbiAgICBjb25zdCB1cmwgPSBgaHR0cHM6Ly8ke3VzZXIubG9naW59LmdpdGh1Yi5pby9wb3J0Zm9saW9TaXRlYDtcclxuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgdXJsIH0pO1xyXG4gIH0gY2F0Y2ggKGVycikge1xyXG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogZXJyLm1lc3NhZ2UgfSk7XHJcbiAgfVxyXG59Il0sIm5hbWVzIjpbImdldFNlcnZlclNlc3Npb24iLCJhdXRoT3B0aW9ucyIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJtZXRob2QiLCJzdGF0dXMiLCJlbmQiLCJzZXNzaW9uIiwiYWNjZXNzVG9rZW4iLCJqc29uIiwiZXJyb3IiLCJodG1sIiwiYm9keSIsInVzZXJSZXMiLCJmZXRjaCIsImhlYWRlcnMiLCJBdXRob3JpemF0aW9uIiwidXNlciIsInJlcG9SZXMiLCJKU09OIiwic3RyaW5naWZ5IiwibmFtZSIsImF1dG9faW5pdCIsInByaXZhdGUiLCJvayIsIkVycm9yIiwibWVzc2FnZSIsImxvZ2luIiwiY29udGVudCIsIkJ1ZmZlciIsImZyb20iLCJ0b1N0cmluZyIsInNvdXJjZSIsImJyYW5jaCIsInBhdGgiLCJ1cmwiLCJlcnIiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/deployToGitHub.js\n");

/***/ }),

/***/ "next-auth":
/*!****************************!*\
  !*** external "next-auth" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("next-auth");

/***/ }),

/***/ "next-auth/next":
/*!*********************************!*\
  !*** external "next-auth/next" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("next-auth/next");

/***/ }),

/***/ "next-auth/providers/github":
/*!*********************************************!*\
  !*** external "next-auth/providers/github" ***!
  \*********************************************/
/***/ ((module) => {

module.exports = require("next-auth/providers/github");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2FdeployToGitHub&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5CdeployToGitHub.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();